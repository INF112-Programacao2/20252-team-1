CXX := g++
CXXFLAGS := -Wall -Wextra -std=c++17

LDFLAGS := -lsfml-graphics -lsfml-window -lsfml-system

SRC_DIR := src
OBJ_DIR := obj

TARGET := main

SRCS := $(wildcard $(SRC_DIR)/*.cpp)
OBJS := $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.o,$(SRCS))

# arquivo de dependencia
DEPS := $(OBJS:.o=.d)

all: $(TARGET)

# gera o executável
$(TARGET): $(OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# compila .cpp para .o e gera .d
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp | $(OBJ_DIR)
	$(CXX) $(CXXFLAGS) -MMD -c $< -o $@

# cria o diretório /obj
$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

# inclui arquivos .d (dependências de headers)
-include $(DEPS)

# remove binário e objetos
clean:
	rm -rf $(OBJ_DIR) $(TARGET)

.PHONY: all clean
